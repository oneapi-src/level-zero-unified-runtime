---
name: Build - Adapters on HW - Reusable

on:
  workflow_call:
    inputs:
      adapter_name:
        required: true
        type: string
      other_adapter_name:
        required: false
        type: string
        default: ""
      runner_name:
        required: true
        type: string
      platform:
        description: "Platform string, `UR_CTS_ADAPTER_PLATFORM` will be set to this."
        required: false
        type: string
        default: ""
      static_loader:
        required: false
        type: string
        default: OFF
      static_adapter:
        required: false
        type: string
        default: OFF

permissions:
  contents: read

env:
  UR_LOG_CUDA: "level:error;flush:error"
  UR_LOG_HIP: "level:error;flush:error"
  UR_LOG_LEVEL_ZERO: "level:error;flush:error"
  UR_LOG_NATIVE_CPU: "level:error;flush:error"
  UR_LOG_OPENCL: "level:error;flush:error"

jobs:
  adapter-build-hw:
    name: Build & Test HW
    if: github.repository == 'oneapi-src/unified-runtime'  # run only on upstream; forks won't have the HW
    strategy:
      matrix:
        adapter: [{
          name: "${{inputs.adapter_name}}",
          other_name: "${{inputs.other_adapter_name}}",
          platform: "${{inputs.platform}}",
          static_Loader: "${{inputs.static_loader}}",
          static_adapter: "${{inputs.static_loader}}"
        }]
        build_type: [Debug, Release]
        compiler: [{c: clang, cxx: clang++}]
        # TODO: The latest L0 loader segfaults when built with clang.
        exclude:
         - adapter: {name: L0, platform: ""}
           compiler: {c: clang, cxx: clang++}
        # Exclude these configurations to avoid overloading the runners.
         - adapter: {static_Loader: ON}
           build_type: Release
         - adapter: {static_Loader: ON}
           compiler: {c: clang, cxx: clang++}
         - adapter: {static_adapter: ON}
           build_type: Release
         - adapter: {static_adapter: ON}
           compiler: {c: clang, cxx: clang++}

    runs-on: ${{inputs.runner_name}}

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Target Build
      run: |
        mkdir build2
        ls -lah /usr/lib/bfd-plugins/
        /usr/bin/ar Dqc --plugin /usr/lib/bfd-plugins/LLVMgold-14.so build2/good.a good.o | tee build2/arlog.good
        test ! -s build2/arlog.good
